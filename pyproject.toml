[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ycurl"
dynamic = ["version"]
description = 'Shareable HTTP request recipes'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "QAToolist", email = "qatoolist@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "typer[all]>=0.15.3",
    "httpx>=0.27",
    "PyYAML>=6.0",
    "rich>=13.7",
    "deepmerge>=1.1",
]

[project.urls]
Documentation = "https://github.com/QAToolist/ycurl#readme"
Issues = "https://github.com/QAToolist/ycurl/issues"
Source = "https://github.com/QAToolist/ycurl"

[project.scripts]
ycurl = "ycurl.cli:cli"

[tool.hatch.version]
path = "src/ycurl/__about__.py"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/ycurl tests}"

[tool.coverage.run]
source_pkgs = ["ycurl", "tests"]
branch = true
parallel = true
omit = [
  "src/ycurl/__about__.py",
]

[tool.coverage.paths]
ycurl = ["src/ycurl", "*/ycurl/src/ycurl"]
tests = ["tests", "*/ycurl/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

# Ruff configuration for ycurl (updated for Ruff ≥0.4 schema)

[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py313"
src = ["src", "tests"]
respect-gitignore = true
exclude = [
    ".git", ".hg", ".mypy_cache", ".ruff_cache", ".pytest_cache", ".venv",
    "__pypackages__", "build", "dist"
]

# -----------------------------------------------------------------------------
# Lint options live in their own table as of Ruff 0.3+
# -----------------------------------------------------------------------------
[tool.ruff.lint]
select = [
    "E", "F", "I", "N", "B", "S", "C4", "SIM", "UP", "PL", "RUF"
]
ignore = [
    "E501",        # handled by formatter
    "RUF001", "RUF002", "RUF003",   # Unicode dash ambiguity
    "PLR0913",     # arg count (OK for Click callbacks)
    "N818",        # custom exception names
    "UP038",       # isinstance union – readability preference
    "UP035",
    "RUF005"       # list concat readability (optional)
]
unfixable = ["B008"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "D", "PLR2004"]

# -----------------------------------------------------------------------------
# Formatter (Black‑style) options
# -----------------------------------------------------------------------------
[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

# -----------------------------------------------------------------------------
# Docstring style (Google)
# -----------------------------------------------------------------------------
[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.bandit]
exclude_dirs = [
    ".venv",
    ".git",
    "__pycache__",
]
